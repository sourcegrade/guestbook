[versions]
kotlin = "1.9.0"
ktor = "2.3.3"
log4j = "2.20.0"

[libraries]
exposed-bom = "org.jetbrains.exposed:exposed-bom:0.41.1"
exposed-core = { module = "org.jetbrains.exposed:exposed-core" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time" }
kontour = "org.sourcegrade:kontour-domain:0.1.0-SNAPSHOT"
kotlinx-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"
ktor-resources = { module = "io.ktor:ktor-resources", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
logging-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
logging-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
redux = "org.reduxkotlin:redux-kotlin-threadsafe:0.6.1"

[bundles]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-java-time"]
ktor-client = ["ktor-serialization", "ktor-client-resources"]
ktor-server = ["ktor-serialization", "ktor-server-auth", "ktor-server-content-negotiation", "ktor-server-cors", "ktor-server-netty", "ktor-server-resources", "ktor-server-sessions", "ktor-server-status-pages"]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
